import os
import sys
from api.scripts import dump_test_data, load_test_data


def install():
    os.system("pip install -r requirements.txt & pip install -r requirements-dev.txt")

def run_linter():
    os.system("pylint mod")


def run_tests():
    if sys.argv[2] == "--cov":
        os.system("pytest mod --cov")
    elif not sys.argv[2]:
        os.system("pytest mod")
    else:
        print("Wrong parameters")


def run_test_coverage():
    os.system("pytest mod --cov")


def format():
    os.system("black . & isort .")


def build():
    os.system("mypy mod & pylint mod & pytest mod --cov")


def load_data():
    load_test_data.load()

def dump_data():
    dump_test_data.dump()

def clear_db():
    pass
    #TODO

def reset_db():
    clear_db()
    load_data()

def create_migration():
    os.system("alembic revision --autogenerate")
    print("Be sure to proofread the autogenerated migration! After that, the migration can be applied with the 'migration-apply'-command")

def apply_migration():
    os.system("alembic upgrade head")

commands = {
    "install": install,
    "lint": run_linter,
    "test": run_tests,
    "format": format,
    "build": build,
    "load-data": load_data,
    "dump-data": dump_data,
    "clear-db": clear_db,
    "reset-db": reset_db,
    "migration-create": create_migration,
    "migration-apply": apply_migration,
}

if len(sys.argv) == 1:
    print("No Command provided. Available Commands: Help")
elif len(sys.argv) >= 3 and sys.argv[1] != "test":
    print("Too many arguments provided")
else:
    commands[sys.argv[1]]()